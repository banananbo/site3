version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
    restart: always
    depends_on:
      - backend
    networks:
      - app-network
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://backend:8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.entrypoints=web"

  backend:
    build:
      context: ./backend
    restart: always
    depends_on:
      - db
    networks:
      - app-network
    environment:
      - SPRING_PROFILES_ACTIVE=production
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/app_db?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=app_user
      - SPRING_DATASOURCE_PASSWORD=app_password
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.entrypoints=web"

  db:
    image: mysql:8.0
    restart: always
    volumes:
      - db-data:/var/lib/mysql
      - ./db/init:/docker-entrypoint-initdb.d
    networks:
      - app-network
    environment:
      - MYSQL_DATABASE=app_db
      - MYSQL_USER=app_user
      - MYSQL_PASSWORD=app_password
      - MYSQL_ROOT_PASSWORD=root_password

  adminer:
    image: adminer:latest
    restart: always
    depends_on:
      - db
    networks:
      - app-network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminer.entrypoints=web"

  traefik:
    image: traefik:v2.10
    restart: always
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/dynamic_conf.yml:/etc/traefik/dynamic_conf.yml:ro
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db-data: 